@startuml JHaaS Portal
' skinparam linetype polyline
' skinparam linetype ortho
left to right direction

together {
  enum              AuthProvider
  entity            Credentials {
    * userId: UUID
    ---
    * authProvider: AuthProvider
    * authProviderId: string
    password: string | null
    createdAt: Date <<generiert>>
    updatedAt: Date <<generiert>>
    ---
    user: User <<eagerloaded>>
    ---
    constructor(...)
  }

  class             User {
    * id: UUID
    ---
    firstName: string
    lastName: string
    email: string
    isAdmin: boolean
    isLead: boolean
    createdAt: Date <<generiert>>
    updatedAt: Date <<generiert>>
    ---
    credentials: Credentials
    participations: Participation[]
    jupyterHubRequests: JupyterHubRequest[]
    ---
    constructor(...)
    sync(...)
    authentikId(...)
  }
}

enum              ParticipationStatus
class             Participation {
  * hubId: UUID
  * participantId: UUID
  ---
  status: ParticipationStatus
  createdAt: Date <<generiert>>
  updatedAt: Date <<generiert>>
  ---
  hub: JupyterHubRequest
  participant: Participant
  ---
  constructor(...)
}

together {
  enum              JupyterHubRequestStatus
  interface         JupyterHubRequestUserConf
  abstract          JupyterHubBase {
    * id: UUID
    ---
    name: string
    description: string | null
    userConf: JupyterHubRequestUserConf
    containerImage: string
    notebookDefaultUrl: string | null
    status: JupyterHubRequestStatus
    startDate: Date
    endDate: Date
    createdAt: Date <<generiert>>
    updatedAt: Date <<generiert>>
    ---
    creator: User
    ---
    constructor(...)
    changesAllowed()
    userAllowed()
    userAndChangesAllowed()
  }
}
together {
  entity            JupyterHubRequest {
    slug: string <<unique>>
    authentikGroup: string | null
    instanceFlavour: string
    instanceCount: number
    hubUrl: string | null
    ---
    changeRequests: JupyterHubChangeRequest[]
    participations: Participation[]
    ---
    constructor(...)
    userConf2instanceConf()
    cancelPendingChangeRequests()
    setChangeRequestStatus()
    applyChangeRequest()
    getChangeRequestById()
    getCoreData()
    participationAllowed()
  }
  entity            JupyterHubChangeRequest {
    ---
    origRequest: JupyterHubRequest
    ---
    constructor(...)
    changesAllowed()
  }
}

JupyterHubBase <|-- JupyterHubRequest
JupyterHubBase <|-- JupyterHubChangeRequest

Credentials::authProvider --|> AuthProvider
Credentials::user --* User::credentials

User::jupyterHubRequests *-- JupyterHubBase::creator
User::participations *-- Participation::participant

Participation::status --|> ParticipationStatus
Participation::hub --* JupyterHubRequest::participations

JupyterHubBase::userConf --|> JupyterHubRequestUserConf
JupyterHubBase::status --|> JupyterHubRequestStatus

JupyterHubRequest::changeRequests *-- JupyterHubChangeRequest::origRequest
@enduml
